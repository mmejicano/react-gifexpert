{"version":3,"sources":["componentes/AddCategory.jsx","componentes/GifItem.jsx","helpers/getGifs.js","componentes/GifGrid.jsx","hooks/useFetchGifs.js","GifExpert.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","placeholder","onChange","target","GifItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpert","categoria","i","ReactDOM","render","document","getElementById"],"mappings":"6LAoCeA,EAhCK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EAEFC,mBAAS,IAFP,mBAE/BC,EAF+B,KAEnBC,EAFmB,KAiBtC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,YAAY,SACZC,SAnBS,SAACR,GAClBF,EAAcE,EAAES,OAAOH,YCEhBI,EATC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACtB,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,+BAAKA,EAAL,O,uBCJEK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACVN,EADU,iDACsCO,UAAUF,GADhD,+DAGEG,MAAMR,GAHR,cAGVS,EAHU,gBAIKA,EAAKC,OAJV,uBAITC,EAJS,EAITA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAV1B,kBAaTY,GAbS,4CAAH,sDCiCNM,EA/BC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECAN,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAAE2B,KAAM,GAAIQ,SAAS,IAFlB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAetC,OAXAC,qBAAU,WACNlB,EAAQC,GAAUkB,MAAK,SAACC,GACpBH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAIlB,CAACd,IAGGe,EDV2BK,CAAapB,GAAjCW,EALgB,EAKtBL,KAAcQ,EALQ,EAKRA,QAItB,OACI,oCACI,wBAAIlB,UAAU,qCAAqCI,GACnD,6BAECc,GAAW,uBAAGlB,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aAEVe,EAAOH,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIY,IAAKZ,EAAIC,IACLD,UEMba,EA1BG,WAAM,MAIc3C,mBAAS,CAAC,cAJxB,mBAIb4C,EAJa,KAIF7C,EAJE,KAWpB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,aAAcA,IAE3B,4BACM6C,EAAUf,KAAI,SAACrB,EAAKqC,GAAN,OACZ,kBAAC,EAAD,CAASH,IAAKlC,EAAKa,SAAUb,U,MClBjDsC,IAASC,OAAO,kBAAC,EAAD,MAAeC,SAASC,eAAe,U","file":"static/js/main.25d37221.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst AddCategory = ({ setCategoria }) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        // console.log('submitiado');\n        if (inputValue.trim().length > 2) {\n            setCategoria(cat => [inputValue, ...cat])\n            setInputValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} >\n            <input\n                type=\"text\"\n                value={inputValue}\n                placeholder=\"Buscar\"\n                onChange={handleChange}\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategoria: PropTypes.func.isRequired\n}\nexport default AddCategory;\n","import React from 'react';\n\nconst GifItem = ({ title, url }) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p> {title} </p>\n        </div>\n    );\n}\n\nexport default GifItem;\n","\n\n export const getGifs = async(category) => {\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=jskVGs3Onvh93DPjqjvJtgrHUdBpUb6O`\n\n        const resp= await fetch(url);\n        const {data} = await resp.json()\n\n        const gifs = data.map(img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n        return gifs;\n        \n    }","import React from 'react';\nimport GifItem from './GifItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([])\n\n\n    const { data: images, loading } = useFetchGifs(category)\n\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            <hr />\n\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            <div className=\"card-grid\">\n\n                {images.map(img => (\n                    <GifItem\n                        key={img.id}\n                        {...img}\n                    />\n                )\n                )\n                }\n\n            </div>\n        </>\n    );\n}\n\nexport default GifGrid;\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({ data: [], loading: true })\n\n    useEffect(() => {\n        getGifs(category).then((imgs) => {\n            setstate({\n                data: imgs,\n                loading: false\n            })\n        }\n        )\n    }, [category]);\n\n\n    return state;\n\n}\n","import React, { useState } from 'react';\nimport AddCategory from './componentes/AddCategory';\nimport GifGrid from './componentes/GifGrid';\n\nconst GifExpert = () => {\n\n    // const categoria = ['One punch', 'Samurai', 'One Piece'];\n\n    const [categoria, setCategoria] = useState(['One Piece']);\n    // const addCat = () => {\n    //     setCategoria([...categoria, 'Hunter'])\n    //     setCategoria( cat => [...cat, 'One piece'])\n\n    // }\n\n    return (\n        <>\n            <h2>Gif-Expert App</h2>\n            <AddCategory setCategoria={setCategoria} />\n\n            <ul>\n                { categoria.map((cat, i) => (\n                    <GifGrid key={cat} category={cat} />\n                    ))\n                }\n            </ul>\n        </>\n    );\n}\n\nexport default GifExpert;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpert from './GifExpert';\nimport './index.css';\nReactDOM.render(<GifExpert />, document.getElementById('root'));\n"],"sourceRoot":""}